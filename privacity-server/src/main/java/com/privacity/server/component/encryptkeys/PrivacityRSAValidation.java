package com.privacity.server.component.encryptkeys;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.security.GeneralSecurityException;
import java.security.KeyFactory;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.Security;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;

import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;

import com.google.gson.Gson;
import com.privacity.server.component.common.service.facade.FacadeComponent;

import lombok.extern.java.Log;

@Component
@Log
public class PrivacityRSAValidation {
	
	private final RSAComponent rsa;
	private PublicKey publicKey;
	private PrivateKey privateKey;

	
	public PrivacityRSAValidation(@Autowired @Lazy FacadeComponent comps) throws NoSuchAlgorithmException, NoSuchProviderException, InvalidKeySpecException {
		
		
		
		log.info("Creando Privacity RSA");
		Security.addProvider(new BouncyCastleProvider());
		log.info("Creando Privacity RSA - 1");
		rsa = comps.common().RSA();
		log.info("Creando Privacity RSA - 2");
		//KeyPair keys = rsa.generateKeyPair();
		log.info("Creando Privacity RSA - 3");
		
		//////System.out.println(new Gson().toJson(keys.getPrivate().getEncoded()));
		//////System.out.println(new Gson().toJson(keys.getPublic().getEncoded()));
		
		KeyFactory kf = KeyFactory.getInstance("RSA", "BC");
		
		X509EncodedKeySpec spec2 = new X509EncodedKeySpec(
				new Gson().fromJson(
						"[48,-126,2,34,48,13,6,9,42,-122,72,-122,-9,13,1,1,1,5,0,3,-126,2,15,0,48,-126,2,10,2,-126,2,1,0,-112,-61,-107,-41,-108,-46,-27,-59,95,-111,56,-112,-44,126,102,-77,-44,-13,105,-106,-34,37,-23,81,-7,26,-16,68,89,-110,65,-120,-108,-51,-2,120,-67,77,22,-63,120,41,-7,87,66,-111,-123,93,-30,-84,-6,-86,48,96,81,24,-15,32,50,101,25,78,-108,-3,93,-97,121,54,6,-6,-4,-87,-14,-56,108,117,-53,-59,-10,123,-126,16,12,-111,-82,26,-98,89,-123,-2,21,-76,82,1,-106,-119,-120,15,-52,-5,-64,-25,-31,-86,-119,-32,-122,68,19,122,-128,86,-37,-50,56,-16,-97,114,-43,-42,-81,108,-91,-70,-59,20,62,52,-35,109,-46,113,-50,-69,10,107,54,-11,-80,-16,23,-69,-106,-101,-92,-17,40,108,36,1,-36,3,-95,66,29,-70,-82,19,104,72,85,-38,-103,-110,80,-27,28,33,75,-99,99,53,21,68,104,88,90,106,-65,127,-24,73,-112,65,-15,26,-82,32,-71,49,102,-62,-70,-112,62,36,-64,-98,-29,82,29,-122,-39,36,2,16,53,-53,-85,-67,54,83,30,-126,31,-33,-86,-46,94,125,-9,-41,33,-22,-25,97,-7,-88,8,-80,76,-35,-17,-30,-32,11,-87,-99,97,123,24,88,69,-126,123,-8,96,-61,-90,36,18,-16,75,-112,30,51,25,-120,-69,-22,65,-37,-35,79,-68,-72,-2,56,68,75,-62,12,-46,53,109,127,114,17,-53,-87,100,-70,-59,25,81,10,-60,-33,46,127,42,99,85,64,-107,20,-98,-17,86,-10,-128,-66,120,-119,120,-9,-118,-84,63,87,-3,-79,-87,-23,102,83,-4,-92,4,28,35,-59,8,57,10,47,5,101,122,89,66,-16,20,17,121,-98,104,-97,-112,-95,1,58,-102,-12,-94,-121,101,-60,-70,-74,21,-57,48,74,46,64,-19,66,-50,16,116,97,53,35,107,-36,31,109,-36,8,-87,31,104,73,-103,63,81,75,43,-95,-64,-90,20,-27,-47,-79,-67,-79,-92,16,-28,-27,-16,-13,58,-6,122,17,60,112,62,48,33,-31,51,-57,24,33,84,-32,-90,112,-104,96,-96,73,-87,12,-71,36,-26,-21,-1,-18,105,-3,-120,-100,61,108,-45,-2,45,4,47,-70,-45,108,-9,98,-118,-121,-28,20,5,-6,-1,-112,53,65,-112,-50,-87,125,-128,64,89,114,-125,-103,95,64,-9,28,1,-8,108,-38,17,88,-108,-128,-17,58,-72,-124,115,-71,-3,22,-24,-112,-36,-107,17,-106,7,-49,-70,-119,-51,-101,87,-42,94,-26,16,85,-110,-120,27,92,119,-16,42,-24,-12,-99,121,44,-80,-81,2,3,1,0,1]"
						, byte[].class));
		publicKey = kf.generatePublic(spec2);
		//////System.out.println(java_public.toString());
		
		
		
		//publicKey = keys.getPublic();
		log.info("Creando Privacity RSA - 4");
		
		KeyFactory kf3 = KeyFactory.getInstance("RSA", "BC");
		PKCS8EncodedKeySpec spec3 = new PKCS8EncodedKeySpec(
				new Gson().fromJson(
						"[48,-126,9,66,2,1,0,48,13,6,9,42,-122,72,-122,-9,13,1,1,1,5,0,4,-126,9,44,48,-126,9,40,2,1,0,2,-126,2,1,0,-112,-61,-107,-41,-108,-46,-27,-59,95,-111,56,-112,-44,126,102,-77,-44,-13,105,-106,-34,37,-23,81,-7,26,-16,68,89,-110,65,-120,-108,-51,-2,120,-67,77,22,-63,120,41,-7,87,66,-111,-123,93,-30,-84,-6,-86,48,96,81,24,-15,32,50,101,25,78,-108,-3,93,-97,121,54,6,-6,-4,-87,-14,-56,108,117,-53,-59,-10,123,-126,16,12,-111,-82,26,-98,89,-123,-2,21,-76,82,1,-106,-119,-120,15,-52,-5,-64,-25,-31,-86,-119,-32,-122,68,19,122,-128,86,-37,-50,56,-16,-97,114,-43,-42,-81,108,-91,-70,-59,20,62,52,-35,109,-46,113,-50,-69,10,107,54,-11,-80,-16,23,-69,-106,-101,-92,-17,40,108,36,1,-36,3,-95,66,29,-70,-82,19,104,72,85,-38,-103,-110,80,-27,28,33,75,-99,99,53,21,68,104,88,90,106,-65,127,-24,73,-112,65,-15,26,-82,32,-71,49,102,-62,-70,-112,62,36,-64,-98,-29,82,29,-122,-39,36,2,16,53,-53,-85,-67,54,83,30,-126,31,-33,-86,-46,94,125,-9,-41,33,-22,-25,97,-7,-88,8,-80,76,-35,-17,-30,-32,11,-87,-99,97,123,24,88,69,-126,123,-8,96,-61,-90,36,18,-16,75,-112,30,51,25,-120,-69,-22,65,-37,-35,79,-68,-72,-2,56,68,75,-62,12,-46,53,109,127,114,17,-53,-87,100,-70,-59,25,81,10,-60,-33,46,127,42,99,85,64,-107,20,-98,-17,86,-10,-128,-66,120,-119,120,-9,-118,-84,63,87,-3,-79,-87,-23,102,83,-4,-92,4,28,35,-59,8,57,10,47,5,101,122,89,66,-16,20,17,121,-98,104,-97,-112,-95,1,58,-102,-12,-94,-121,101,-60,-70,-74,21,-57,48,74,46,64,-19,66,-50,16,116,97,53,35,107,-36,31,109,-36,8,-87,31,104,73,-103,63,81,75,43,-95,-64,-90,20,-27,-47,-79,-67,-79,-92,16,-28,-27,-16,-13,58,-6,122,17,60,112,62,48,33,-31,51,-57,24,33,84,-32,-90,112,-104,96,-96,73,-87,12,-71,36,-26,-21,-1,-18,105,-3,-120,-100,61,108,-45,-2,45,4,47,-70,-45,108,-9,98,-118,-121,-28,20,5,-6,-1,-112,53,65,-112,-50,-87,125,-128,64,89,114,-125,-103,95,64,-9,28,1,-8,108,-38,17,88,-108,-128,-17,58,-72,-124,115,-71,-3,22,-24,-112,-36,-107,17,-106,7,-49,-70,-119,-51,-101,87,-42,94,-26,16,85,-110,-120,27,92,119,-16,42,-24,-12,-99,121,44,-80,-81,2,3,1,0,1,2,-126,2,0,13,-3,-86,-67,-53,-44,18,-114,70,80,-120,3,78,-118,-8,115,18,-74,-100,-14,-63,-80,-4,-127,70,91,34,-38,25,-40,-38,-80,92,-32,-120,47,116,32,50,74,-72,-80,64,57,48,-91,-120,103,76,-54,-112,108,-120,-114,-108,-28,-74,-23,-8,100,-29,-7,38,47,-71,86,45,6,26,104,103,-87,39,42,-43,19,17,2,-115,11,-60,-112,-73,-124,-86,17,-82,82,96,12,87,42,118,-5,-73,78,-66,-34,93,-85,100,93,-117,51,36,-121,-5,-75,50,106,-68,-106,2,13,96,92,107,123,6,64,83,-65,99,72,-88,-42,110,79,120,67,123,59,49,-8,-54,-64,73,-69,-99,78,-40,-99,-15,-12,119,-112,102,-43,5,-113,-36,-41,-5,-60,85,-9,4,-69,-70,-42,-24,119,-85,-4,-112,111,31,91,42,110,97,81,-80,38,-51,19,72,-16,-2,101,-90,-62,-38,-18,-94,-4,-99,109,-46,1,-55,95,101,-111,30,66,6,118,-114,79,-111,120,96,106,-84,99,45,71,-46,-102,54,37,-57,94,-64,88,15,-81,-83,6,7,13,-29,104,-2,110,-44,-116,-47,54,39,-7,69,37,-40,-90,-41,-26,-95,123,-123,54,29,47,71,-18,42,73,-114,107,-111,-125,-50,-47,-63,106,-28,59,-96,-112,-82,-2,-63,78,-128,-104,114,-3,-88,99,-77,-105,-100,-17,-67,-9,115,-19,46,-98,43,14,74,-68,-56,-24,4,37,33,-2,-42,111,16,-79,68,-44,-3,-29,-19,-78,60,-42,-9,63,104,-105,-112,-32,47,-31,-116,34,-75,-70,-39,-71,-86,-61,102,25,-47,96,83,35,-74,72,104,-42,69,-61,-40,124,-80,-80,92,-64,-89,-82,45,12,-90,124,35,77,-84,96,31,-124,-119,-72,-7,10,19,-54,87,123,-91,-13,113,-51,-90,62,-47,-23,21,-114,38,36,72,36,2,14,-9,62,-27,48,85,93,22,96,0,52,18,-107,55,78,-5,68,-32,-91,-41,-56,-28,76,-80,-71,-105,51,8,17,-3,-56,66,29,36,-115,59,33,-40,48,-82,-16,59,118,96,48,-82,106,-85,106,-7,-92,-120,-13,14,85,9,55,-66,34,-4,58,-82,54,115,43,80,99,-54,102,111,82,95,-108,15,9,24,-51,-21,-120,-41,-26,-103,84,74,-93,-84,60,-3,87,-32,-50,70,-77,-119,-105,73,126,89,5,39,79,48,117,116,63,-116,27,-32,2,47,-1,125,-39,98,96,16,-5,-71,123,-69,-63,72,-23,46,-16,-33,1,46,95,125,-46,-35,-11,-48,7,115,104,127,118,82,109,2,-126,1,1,0,-55,103,116,13,89,21,-51,-124,-24,71,126,-71,92,69,-93,87,-125,-10,-28,-5,26,58,82,-32,32,-64,43,-93,-118,118,-114,94,111,127,105,-20,49,-42,-58,100,74,122,40,90,96,-41,-2,-11,-74,-119,-117,31,-71,-90,18,-96,-90,28,96,-82,-54,17,-117,-31,113,77,-99,-98,-21,0,27,-72,67,1,63,-74,52,37,-104,-75,-121,-128,-64,-24,-91,109,46,110,41,-117,119,23,-65,74,-23,-98,30,-125,92,16,-100,15,-38,-119,-79,19,-10,-12,23,10,52,-58,57,116,-8,-29,105,-4,-72,55,-118,-37,67,21,-34,-31,111,35,124,121,105,-30,38,21,-122,5,108,-107,-91,84,-121,26,66,-124,-9,-92,-3,-15,48,9,91,78,-116,-59,-67,-62,-70,-43,-123,-75,29,-128,99,-89,-59,40,-3,-63,-114,-19,90,-29,57,-102,34,-29,13,37,-96,-69,8,-56,-63,112,107,-109,-30,-104,24,-6,-17,94,26,42,-21,85,41,92,-88,76,38,-19,-11,72,-43,-56,116,-4,-107,-17,39,21,106,-67,115,61,67,83,9,108,-105,-67,66,34,65,-93,120,-54,23,112,118,75,23,12,104,24,-67,-31,-92,107,-71,-38,-35,-40,33,-71,-103,20,2,48,32,36,-92,63,57,-45,2,-126,1,1,0,-72,1,-113,-86,0,70,92,-37,-94,-91,-95,5,-114,-51,-42,-29,-48,21,67,77,100,81,47,-24,80,-74,70,40,24,125,40,30,-45,59,-78,-95,96,-91,-4,-22,113,-5,91,59,105,-115,-121,93,87,0,76,108,-66,103,63,16,79,22,-120,-4,47,53,-10,-78,-27,61,-67,118,-31,-123,-125,-78,50,14,116,110,8,-52,39,58,44,118,20,92,42,64,74,110,-58,-42,25,12,0,122,124,-5,44,-102,-33,72,-50,3,44,-8,-46,-82,-118,-91,124,41,53,-41,-106,71,62,47,123,-25,50,8,-87,-122,-108,-68,-65,89,-120,-92,-111,-32,-20,-13,37,-49,121,-40,-98,-64,51,-67,-25,76,-92,105,54,-45,-60,65,-33,-103,-41,-16,-65,9,-47,-70,-63,38,89,95,-32,122,-76,-35,50,-104,95,89,-109,6,2,-8,82,-106,94,-61,-48,36,5,78,120,69,65,32,-43,-95,-84,-21,-30,-76,36,59,-25,-52,-38,-41,15,-59,-78,8,26,-108,127,79,20,121,-22,30,-53,-67,91,106,18,27,-76,102,-4,74,28,-68,-47,21,-13,55,-33,-61,93,-85,-83,72,105,-6,101,108,39,36,42,-36,-94,45,61,93,-88,-96,-63,10,-106,29,12,-72,-26,-75,-34,8,104,53,2,-126,1,1,0,-58,6,14,-24,20,-32,72,11,86,-86,-3,33,89,101,42,-2,32,69,63,-52,-40,115,-30,10,118,-119,28,31,23,68,12,37,51,-15,-115,-2,-22,-35,-26,-128,-77,109,-70,-127,106,88,-43,89,88,89,-110,77,-26,38,48,-120,125,-22,-58,-16,-12,-61,29,-54,-46,-79,98,-71,-33,11,99,53,-33,-61,-71,-107,-9,93,-61,-15,48,66,-38,-23,-93,-59,94,-14,119,-84,-91,-78,-42,-91,-36,95,88,87,5,-51,90,-12,-121,-123,-4,114,-55,-52,35,95,40,-106,-127,-27,-51,-43,35,-33,-108,109,31,-3,7,-49,-40,45,-59,45,-103,-12,114,-76,37,-121,-30,23,49,53,77,-78,119,-121,-51,65,-103,-112,67,18,-62,-115,96,-106,49,-7,54,-29,-32,-7,-110,22,-118,-28,50,-105,-63,85,-43,114,91,-118,106,99,-95,-66,56,113,15,-5,32,54,-27,-93,37,-10,-41,-1,54,-69,31,76,-110,-49,-18,96,-90,-76,60,15,-37,117,-52,-115,9,47,-52,-22,-28,-125,121,20,4,84,-99,119,-102,119,-16,-37,19,24,15,117,-55,49,-113,98,32,-96,107,61,107,65,-41,110,-98,103,61,67,63,123,-97,-24,95,89,99,-121,109,-56,107,-126,80,8,86,-23,-57,123,2,-126,1,0,61,31,119,-93,-105,23,-56,124,-59,24,-109,-42,-114,-53,93,-104,-85,100,-124,-56,-50,-116,17,-121,-16,87,-68,18,81,-96,49,-107,-101,-63,118,-29,24,-127,-54,-13,-18,12,-5,15,79,78,-50,42,121,94,6,5,17,114,-90,-122,58,95,87,-3,-67,-119,5,124,3,-98,112,-77,110,-46,-75,30,-102,118,38,-62,-18,117,50,-118,-90,126,74,-31,26,-65,-28,121,-53,-33,14,-50,-25,-47,-56,118,127,40,-85,7,58,55,-33,-42,127,-43,-81,4,-83,-85,-38,-48,-44,-128,-79,-19,-128,17,26,-109,-70,12,-108,-105,-26,80,77,-115,-83,79,-76,38,72,-25,20,-88,-102,-125,106,44,-87,10,-46,-118,-120,-59,-21,-87,-98,39,50,-114,44,71,-116,-67,-90,-81,-96,124,-78,-54,-48,13,-78,98,-33,57,-104,23,37,33,107,-3,-69,88,-4,105,26,-62,40,61,-119,22,-23,32,29,-102,-11,-31,-75,47,-103,30,121,-117,123,23,-58,-67,-34,102,121,-85,-63,55,-122,71,-40,-111,-4,45,-51,-6,26,1,35,-55,82,-90,126,37,-10,119,23,3,-124,-72,36,-123,-85,126,-101,-10,67,66,70,98,-88,20,-77,15,-53,-106,42,-55,-29,119,-98,-28,68,-17,32,-28,86,9,2,-126,1,0,114,105,-90,98,127,60,32,-109,112,-87,63,9,-33,101,126,-63,-125,-62,111,102,16,-84,-73,-101,68,31,-119,-81,-81,-102,45,-48,58,-114,30,-5,92,-36,85,-11,37,-37,-111,103,119,-126,64,84,26,-4,-28,90,-113,83,-13,41,-60,-53,56,-71,-110,36,52,94,36,47,-49,103,-99,105,-26,74,-21,-36,-39,119,116,-76,-50,51,-113,-50,-79,-48,-93,127,-22,-69,54,98,97,70,-29,-8,102,-90,-98,109,109,30,24,119,-65,-13,-121,-116,8,59,-31,-107,-18,75,24,-45,-53,88,91,77,19,-107,37,-21,5,-21,2,-84,-34,-108,121,120,-27,-14,106,-32,33,-17,-27,-40,-86,62,77,113,-46,-26,-122,38,-102,37,-21,-76,-110,-114,-70,-105,107,-39,-79,34,-72,117,7,-34,82,-21,-49,-115,-102,-96,-10,47,45,41,62,97,125,-14,86,-98,121,116,52,-98,87,-24,-59,-120,-94,-54,109,-104,-78,-125,32,-110,91,-68,81,38,-11,-124,115,-89,62,45,-73,-90,-53,-33,92,-27,-29,-19,-76,122,-28,38,51,-95,0,110,60,-109,-73,-1,125,-43,64,-19,3,39,-97,-31,102,-46,-121,-61,-105,-34,77,126,-120,10,-21,-101,42,10,-65,-108,-47,-87,11,21,29,119,-95,98]"
						, byte[].class));
		privateKey = kf3.generatePrivate(spec3);
		//////System.out.println(privateKey.toString());
		
		//privateKey = keys.getPrivate();
		log.info("Fin Creando Privacity RSA");
	
	}

	public String getPublicKeyToSend() {
		return new Gson().toJson(publicKey.getEncoded());
	}
	
	public String desencrypt(String data) throws IOException, GeneralSecurityException {
		byte[] r = rsa.decryptFilePrivate(data.getBytes(StandardCharsets.UTF_8), privateKey);
		return new String(r, StandardCharsets.UTF_8);
	}	
	public String desencrypt(byte[] data) throws IOException, GeneralSecurityException {
		byte[] r = rsa.decryptFilePrivate(data, privateKey);
		return new String(r, StandardCharsets.UTF_8);
	}		
}
